#!/usr/bin/env node
try { require('dotenv').load(); } catch(err) { }//Do Nothing
const debug           = require('debug')('ysp:www');
const {createServer}  = require('http');
const bunyan          = require('bunyan');
const app             = require('./src/app');
const {normalizePort} = require('./src/lib');
const chalk           = require('chalk');

const PORT = process.env.PORT || 10000;
const server = createServer(app);
const show_banner = true;


function showBanner() {
  const banner = `
        ===============================
        √√     √√  (  ____ )  (  ____ )
        √ √   √ √  | (     |  | (    )|
         √ ©_© √   | (_____   | (____)|
          √   √    (_____  )  |  _____)
           √ √           ) |  | (
           √ √     ||____) |  | )
           √_√     |_______)  |/
        ===============================
  `;
  console.log(chalk.blue('=================================================='));
  console.log(chalk.green(banner));
  console.log(chalk.blue('=================================================='));
}


/**
 * server start
 */
server.listen(normalizePort(PORT));
server.on('error', onError);
server.on('listening', onListen);


function onError(error) {
  if(error.syscall !== 'listen') throw error;
  var bind = typeof PORT === 'string'? 'Pipe' + PORT : 'Port' + PORT;
  switch (error.code){
    case 'EACCES':
      console.error(bind);
      process.exit(1);
    case 'EADDRINUSE':
      console.error(bind + 'is in USE');
      process.exit(1);
    default:
      throw error;
  }
}

function onListen() {
  if(show_banner) showBanner();
  debug('NODE_EVN: %s', process.env.NODE_ENV);
  debug('Server start at: %s port', server.address().port);
}


